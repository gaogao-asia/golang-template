version: '3.8'
# x-logging:
#   &logging
#   driver: loki # shipping stdout to loki. In k8s, we can use fluentbit|promtail instead
#   options:
#     loki-url: "http://localhost:3100/loki/api/v1/push"
#     loki-batch-size: 1048576
#     loki-min-backoff: 1s
services:
  # demoapm:
  #   logging: *logging
  #   image: demoapm
  #   container_name: demoapm
  #   ports:
  #     - "8080:8080"
  #   build:
  #     context: ./services/demo
  #     dockerfile: ./Dockerfile
  #   environment:
  #     - OTLP_ENDPOINT=172.16.1.40:4317
  #   depends_on:
  #     - tempo
  collector:
    # collect span for tracing
    image: otel/opentelemetry-collector:latest
    container_name: collector
    hostname: collector
    command: [ "--config=/etc/otc-collector.yaml" ]
    volumes:
      - ./collector.yaml:/etc/otc-collector.yaml
    ports:
      - "5555:5555"

  tempo:
    image: grafana/tempo
    container_name: tempo
    ports:
      - "3200:3200" # tempo
      - "4317:4317" # otlp grpc
    volumes:
      - ./tempo-local.yaml:/etc/tempo/config.yml
    command: [ "--config.file=/etc/tempo/config.yml" ]
    networks:
      - apm
 
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yml:/etc/loki/config.yaml
    networks:
      - apm
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - promtail:/var/log/promtail
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - apm
  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME="postgresql://seroio:seroio@localhost:54321/sirodb?sslmode=disable"
    networks:
      - apm

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.40.4
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    networks:
      - apm
  node_exporter:
    container_name: node_exporter_container
    image: prom/node-exporter
    ports:
      - '9100:9100'
    networks:
      - apm
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - tempo
      - loki
      - prometheus
    networks:
      - apm
    command: ["./wait-for.sh","tempo:4317"]
    
    

networks:
  apm:
    external: true
volumes:
  promtail: